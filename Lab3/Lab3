.text

main:

prompt: #Prompt user to enter height
li $v0, 4
la $a0, greeting #Load address of the greeting
syscall

li $a0, 10 #newline
li $v0, 11
syscall

li $v0, 5 #Get the user input
syscall

move $t0, $v0 #Store the result

#Check if input is greater than 0. If not, goto invalid message. If so, begin loop.
li $t1, 0
blt $t0, $t1, invalid_prompt
NOP 
bgt $t0, $t1, external_loop
NOP
#Display invalid message
invalid_prompt:

li $v0, 4
la $a0, invalid #Load address of the message
syscall

#newline
li $a0, 10
li $v0, 11
syscall

#Go back to prompt
b prompt
NOP

external_loop:
#external loop initialization
move $t1, $t0
li $t0, 1
li $t4, 1

external_loop_conditional_check:
ble $t0, $t1, external_loop_body #external for loop check
NOP

b exit_external_loop 
NOP

external_loop_body:
#internal_loop_initialization

#print row rumber
li $v0, 1 
move $a0, $t4
syscall

li $t2, 2
move $t3, $t0

internal_loop_conditional_check:
ble $t2, $t3, internal_loop_body #internal for loop check
NOP

b exit_internal_loop
NOP

internal_loop_body:
li $a0, 9
li $v0, 11
syscall

li $a0, 42 #ASCII code of *
li $v0, 11
syscall

addi $t2, $t2, 1 #increment $t2 by 1

b internal_loop_conditional_check
NOP

exit_internal_loop:
addi $t4, $t4, 1 #increment $t4 by 1

li $a0, 10 #newline
li $v0, 11
syscall

#increment t0 by 1
addi $t0, $t0, 1

b external_loop_conditional_check
NOP

exit_external_loop:

li $v0, 10 #exit program
syscall

.data
greeting: .asciiz "Enter the height of the pattern (must be greater than 0):"
invalid: .asciiz "Invalid Entry!"
